name: Automated Release

on:
  push:
    tags:
      - 'v*'  # Ejemplo: v1.0.0, v0.2.1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel

      - name: Build Python package
        run: |
          python -m build

      - name: Publish to GitHub Packages
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
        run: |
          twine upload dist/* --verbose

      - name: Generate Release ZIP
        run: |
          zip -r release.zip . -x '*.git*' '*.github*' 'dist/*' 'build/*' '*.egg-info/*' '__pycache__/*'

      - name: Create GitHub Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: "üéâ Release ${{ github.ref_name }}"
          body: |
            ## üîµ **Novedades**  
            - ‚úÖ Endpoint `/diagrams/` para generar diagramas desde JSON.  
            - üîê Soporte para autenticaci√≥n b√°sica.  
            - üìä Mejoras en la validaci√≥n de modelos.  

            ## üì¶ **Instalaci√≥n**  
            ```bash
            # Instalar desde GitHub Packages
            pip install uml-diagram-generator
            
            # O para desarrollo local:
            pip install -r requirements.txt
            uvicorn app.main:app --reload
            ```

            ## üìö **Documentaci√≥n**  
            - **Local**: [http://localhost:8000/docs](http://localhost:8000/docs)  
            - **Producci√≥n**: [UML Generator](https://diagrama-react.vercel.app/)  

            ## ‚¨áÔ∏è **Assets**  
            Archivos adjuntos generados autom√°ticamente.  
          prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') }}  # Pre-release si el tag incluye 'rc' o 'beta'
          files: |
            release.zip
            dist/*.whl
            dist/*.tar.gz

      - name: Print Release URL
        run: |
            echo "‚úÖ Release creado: ${{ steps.create-release.outputs.url }}"